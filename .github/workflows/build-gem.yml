# I have no idea what I'm doing
name: Build Gem

on:
  push:
    branches: ['dev', 'build-gem']
    tags: ['*']
    paths-ignore: ['*.md', '*.json', '*.png']
  pull_request:
    branches: ['dev', 'build-gem']
    paths-ignore: ['*.md', '*.json', '*.png']

jobs:
  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 7

      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            base-devel
            git
            ruby
            vim
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-gcc


      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            windows/build-mingw64
            windows/downloads
          key: win-${{ hashFiles('windows/Makefile') }}

      - name: Build all dependencies
        shell: msys2 {0}
        run: |
          cd windows
          make

      - name: Build Ruby gem
        shell: msys2 {0}
        run: |
          source windows/vars.sh
          meson build -Dbuild_gem=true
          cd build
          ninja install
          strip ./mkxpz.so
          cd ..
          gem build mkxp-z.gemspec

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      - name: Run sonar-scanner
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands=build/compile_commands.json --define sonar.projectKey=fcorso2016_mkxp-z_gem_windows  

      - name: Prepare archive
        shell: msys2 {0}
        run: |
          mkdir build/artifact
          cd build/artifact
          cp /mingw64/bin/zlib1.dll .
          cp ../../mkxp-z-*.gem .
          cp ../../mkxp.json .
          cp -r ../../scripts .

      - uses: actions/upload-artifact@v3
        with:
          name: mkxp-z.windows.${{github.event_name == 'pull_request' && format('PR{0}', github.event.number) || github.ref_name}}-${{steps.short-sha.outputs.sha}}
          path: |
            build/artifact/*.dll
            build/artifact/*.gem
            build/artifact/mkxp.json
            build/artifact/scripts/
            build/artifact/stdlib/